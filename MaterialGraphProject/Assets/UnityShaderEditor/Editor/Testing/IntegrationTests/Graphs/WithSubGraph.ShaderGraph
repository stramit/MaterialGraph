%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 562bd27a5e73fc64d80a1d9d936ffbd5, type: 3}
  m_Name: WithSubGraph
  m_EditorClassIdentifier: 
  m_MaterialGraph:
    m_SerializableNodes:
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.MetallicMasterNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"71457791-070e-4627-8b28-c6048b4a2092\",\n
        \   \"m_Name\": \"MetallicMasterNode\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 1275.5750732421875,\n            \"y\": 461.3199157714844,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"Albedo\\\",\\n    \\\"m_SlotType\\\":
        0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 2,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        3,\\n    \\\"m_ShaderOutputName\\\": \\\"Albedo\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"Normal\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        2,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        3,\\n    \\\"m_ShaderOutputName\\\": \\\"Normal\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 3,\\n    \\\"m_DisplayName\\\": \\\"Emission\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        2,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        3,\\n    \\\"m_ShaderOutputName\\\": \\\"Emission\\\"\\n}\"\n        },\n
        \       {\n            \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 2,\\n    \\\"m_DisplayName\\\": \\\"Metallic\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        4,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Metallic\\\"\\n}\"\n        },\n
        \       {\n            \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 4,\\n    \\\"m_DisplayName\\\": \\\"Smoothness\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        4,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Smoothness\\\"\\n}\"\n        },\n
        \       {\n            \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 5,\\n    \\\"m_DisplayName\\\": \\\"Occlusion\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        4,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Occlusion\\\"\\n}\"\n        },\n
        \       {\n            \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 6,\\n    \\\"m_DisplayName\\\": \\\"Alpha\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        4,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Alpha\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_MaterialOptions\": {\n        \"m_SrcBlend\":
        0,\n        \"m_DstBlend\": 1,\n        \"m_CullMode\": 0,\n        \"m_ZTest\":
        2,\n        \"m_ZWrite\": 0,\n        \"m_RenderQueue\": 1,\n        \"m_RenderType\":
        0,\n        \"m_ShadowPass\": false,\n        \"m_FullForwardShadows\": false,\n
        \       \"m_NoAmbient\": false,\n        \"m_NoVertexLights\": false,\n        \"m_NoLightmaps\":
        false,\n        \"m_NoDirLightmap\": false,\n        \"m_NoForwardAdd\": false,\n
        \       \"m_ApproxView\": false,\n        \"m_HalfAsView\": false,\n        \"m_Expanded\":
        false\n    }\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.TextureNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"631f4909-24f0-4658-baba-c8c4572e0335\",\n
        \   \"m_Name\": \"Texture\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 634.1159057617188,\n            \"y\": -369.87933349609377,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"RGBA\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 1,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"RGBA\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 2,\\n    \\\"m_DisplayName\\\": \\\"R\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"R\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 3,\\n    \\\"m_DisplayName\\\": \\\"G\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"G\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 4,\\n    \\\"m_DisplayName\\\": \\\"B\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"B\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 5,\\n    \\\"m_DisplayName\\\": \\\"A\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"A\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"UV\\\",\\n    \\\"m_SlotType\\\":
        0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 3,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        2,\\n    \\\"m_ShaderOutputName\\\": \\\"UV\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_SerializedTexture\": \"{\\n    \\\"texture\\\":
        {\\n        \\\"fileID\\\": 2800000,\\n        \\\"guid\\\": \\\"330f42016073a97418a4aae5517e32c8\\\",\\n
        \       \\\"type\\\": 3\\n    }\\n}\",\n    \"m_TextureType\": 0\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.TextureNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"66307d31-2630-4f44-96d4-23139633f2d7\",\n
        \   \"m_Name\": \"Texture\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 631.6298217773438,\n            \"y\": -160.93972778320313,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"RGBA\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 1,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"RGBA\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 2,\\n    \\\"m_DisplayName\\\": \\\"R\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"R\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 3,\\n    \\\"m_DisplayName\\\": \\\"G\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"G\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 4,\\n    \\\"m_DisplayName\\\": \\\"B\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"B\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 5,\\n    \\\"m_DisplayName\\\": \\\"A\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"A\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"UV\\\",\\n    \\\"m_SlotType\\\":
        0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 3,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        2,\\n    \\\"m_ShaderOutputName\\\": \\\"UV\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_SerializedTexture\": \"{\\n    \\\"texture\\\":
        {\\n        \\\"fileID\\\": 2800000,\\n        \\\"guid\\\": \\\"5a5e07ee958edbd468227e1d9ac4726a\\\",\\n
        \       \\\"type\\\": 3\\n    }\\n}\",\n    \"m_TextureType\": 3\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.SubGraphNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"57380e21-ab16-4f46-b629-e589a46b8d13\",\n
        \   \"m_Name\": \"SubGraph\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 162.98675537109376,\n            \"y\": 649.04541015625,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": -1,\\n    \\\"m_DisplayName\\\": \\\"Input 1(4)\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input1\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": -2,\\n    \\\"m_DisplayName\\\": \\\"Input 2(4)\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input2\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"Output 1(4)\\\",\\n
        \   \\\"m_SlotType\\\": 1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Output1\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_SerializedSubGraph\": \"{\\n    \\\"subGraph\\\":
        {\\n        \\\"fileID\\\": 11400000,\\n        \\\"guid\\\": \\\"63179f4461979734ba87324ec6b1268d\\\",\\n
        \       \\\"type\\\": 2\\n    }\\n}\"\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.ColorNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"56f88f67-3dc3-4baa-a316-d7df81e495f0\",\n
        \   \"m_Name\": \"ColorNode\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": -187.33798217773438,\n            \"y\": 763.9640502929688,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"Color\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 1,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Color\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_Color\": {\n        \"r\": 0.05449826642870903,\n
        \       \"g\": 0.09659335017204285,\n        \"b\": 0.9264705777168274,\n
        \       \"a\": 0.0\n    }\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.Vector1Node
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"3cff1441-893f-42dc-aaa9-4ce425d308b1\",\n
        \   \"m_Name\": \"V1Node\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": -194.9690399169922,\n            \"y\": 648.705322265625,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"Value\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Value\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_Value\": 8.0\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.SubGraphNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"a06f837c-0a84-41d7-862d-0c849e64595f\",\n
        \   \"m_Name\": \"SubGraph\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 179.81907653808595,\n            \"y\": 264.7227478027344,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": -1,\\n    \\\"m_DisplayName\\\": \\\"Input 1(4)\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input1\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": -2,\\n    \\\"m_DisplayName\\\": \\\"Input 2(4)\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input2\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"Output 1(4)\\\",\\n
        \   \\\"m_SlotType\\\": 1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        1,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Output1\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_SerializedSubGraph\": \"{\\n    \\\"subGraph\\\":
        {\\n        \\\"fileID\\\": 11400000,\\n        \\\"guid\\\": \\\"10c41d675e06a124a845154dccbcafa8\\\",\\n
        \       \\\"type\\\": 2\\n    }\\n}\"\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.Vector1Node
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"f151e48d-ed62-4dac-a23c-af3d2da11fc4\",\n
        \   \"m_Name\": \"V1Node\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": -265.6796875,\n            \"y\": 430.79071044921877,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"Value\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"Value\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_Value\": 0.7599999904632568\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.SinTimeNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"c227c9d5-fe87-42cb-a2c0-f3a1b4d3ac4a\",\n
        \   \"m_Name\": \"Sine Time\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": -259.36712646484377,\n            \"y\": 129.54629516601563,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"SinTime\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 1,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 1.0,\\n        \\\"y\\\":
        1.0,\\n        \\\"z\\\": 1.0,\\n        \\\"w\\\": 1.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 1.0,\\n        \\\"y\\\": 1.0,\\n        \\\"z\\\":
        1.0,\\n        \\\"w\\\": 1.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"SinTime\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.AddNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"5c951bbe-e2db-4d79-b6de-3d5cb7199c84\",\n
        \   \"m_Name\": \"AddNode\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 609.9285278320313,\n            \"y\": 400.33660888671877,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"Input1\\\",\\n    \\\"m_SlotType\\\":
        0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 0,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input1\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"Input2\\\",\\n
        \   \\\"m_SlotType\\\": 0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        0,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Input2\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 2,\\n    \\\"m_DisplayName\\\": \\\"Output\\\",\\n
        \   \\\"m_SlotType\\\": 1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\":
        0,\\n    \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"Output\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1\n}"
    - typeInfo:
        fullName: UnityEngine.MaterialGraph.TextureNode
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_GuidSerialized\": \"6d741a9b-d9b1-444c-a1f5-2951615bfc25\",\n
        \   \"m_Name\": \"Texture\",\n    \"m_DrawData\": {\n        \"m_Expanded\":
        true,\n        \"m_Position\": {\n            \"serializedVersion\": \"2\",\n
        \           \"x\": 780.825439453125,\n            \"y\": 719.28857421875,\n
        \           \"width\": 0.0,\n            \"height\": 0.0\n        }\n    },\n
        \   \"m_SerializableSlots\": [\n        {\n            \"typeInfo\": {\n                \"fullName\":
        \"UnityEngine.MaterialGraph.MaterialSlot\",\n                \"assemblyName\":
        \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\": \"{\\n
        \   \\\"m_Id\\\": 1,\\n    \\\"m_DisplayName\\\": \\\"RGBA\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 1,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        4,\\n    \\\"m_ShaderOutputName\\\": \\\"RGBA\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 2,\\n    \\\"m_DisplayName\\\": \\\"R\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"R\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 3,\\n    \\\"m_DisplayName\\\": \\\"G\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"G\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 4,\\n    \\\"m_DisplayName\\\": \\\"B\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"B\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 5,\\n    \\\"m_DisplayName\\\": \\\"A\\\",\\n    \\\"m_SlotType\\\":
        1,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 4,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        1,\\n    \\\"m_ShaderOutputName\\\": \\\"A\\\"\\n}\"\n        },\n        {\n
        \           \"typeInfo\": {\n                \"fullName\": \"UnityEngine.MaterialGraph.MaterialSlot\",\n
        \               \"assemblyName\": \"Assembly-CSharp\"\n            },\n            \"JSONnodeData\":
        \"{\\n    \\\"m_Id\\\": 0,\\n    \\\"m_DisplayName\\\": \\\"UV\\\",\\n    \\\"m_SlotType\\\":
        0,\\n    \\\"m_Priority\\\": 2147483647,\\n    \\\"m_ValueType\\\": 3,\\n
        \   \\\"m_DefaultValue\\\": {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\":
        0.0,\\n        \\\"z\\\": 0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_CurrentValue\\\":
        {\\n        \\\"x\\\": 0.0,\\n        \\\"y\\\": 0.0,\\n        \\\"z\\\":
        0.0,\\n        \\\"w\\\": 0.0\\n    },\\n    \\\"m_ConcreteValueType\\\":
        2,\\n    \\\"m_ShaderOutputName\\\": \\\"UV\\\"\\n}\"\n        }\n    ],\n
        \   \"m_OutputPrecision\": 1,\n    \"m_PropertyName\": \"\",\n    \"m_Description\":
        \"\",\n    \"m_Exposed\": 1,\n    \"m_SerializedTexture\": \"{\\n    \\\"texture\\\":
        {\\n        \\\"fileID\\\": 2800000,\\n        \\\"guid\\\": \\\"6e8d12f68bae2294da814f9d4c81b29a\\\",\\n
        \       \\\"type\\\": 3\\n    }\\n}\",\n    \"m_TextureType\": 0\n}"
    m_SerializableEdges:
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\":
        \"631f4909-24f0-4658-baba-c8c4572e0335\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\": \"71457791-070e-4627-8b28-c6048b4a2092\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\":
        \"66307d31-2630-4f44-96d4-23139633f2d7\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\": \"71457791-070e-4627-8b28-c6048b4a2092\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\":
        \"56f88f67-3dc3-4baa-a316-d7df81e495f0\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": -2,\n        \"m_NodeGUIDSerialized\": \"57380e21-ab16-4f46-b629-e589a46b8d13\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\":
        \"3cff1441-893f-42dc-aaa9-4ce425d308b1\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": -1,\n        \"m_NodeGUIDSerialized\": \"57380e21-ab16-4f46-b629-e589a46b8d13\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\":
        \"c227c9d5-fe87-42cb-a2c0-f3a1b4d3ac4a\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": -1,\n        \"m_NodeGUIDSerialized\": \"a06f837c-0a84-41d7-862d-0c849e64595f\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\":
        \"f151e48d-ed62-4dac-a23c-af3d2da11fc4\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": -2,\n        \"m_NodeGUIDSerialized\": \"a06f837c-0a84-41d7-862d-0c849e64595f\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\":
        \"a06f837c-0a84-41d7-862d-0c849e64595f\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 0,\n        \"m_NodeGUIDSerialized\": \"5c951bbe-e2db-4d79-b6de-3d5cb7199c84\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\":
        \"57380e21-ab16-4f46-b629-e589a46b8d13\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 1,\n        \"m_NodeGUIDSerialized\": \"5c951bbe-e2db-4d79-b6de-3d5cb7199c84\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 2,\n        \"m_NodeGUIDSerialized\":
        \"5c951bbe-e2db-4d79-b6de-3d5cb7199c84\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 3,\n        \"m_NodeGUIDSerialized\": \"71457791-070e-4627-8b28-c6048b4a2092\"\n
        \   }\n}"
    - typeInfo:
        fullName: UnityEngine.Graphing.Edge
        assemblyName: Assembly-CSharp
      JSONnodeData: "{\n    \"m_OutputSlot\": {\n        \"m_SlotId\": 5,\n        \"m_NodeGUIDSerialized\":
        \"6d741a9b-d9b1-444c-a1f5-2951615bfc25\"\n    },\n    \"m_InputSlot\": {\n
        \       \"m_SlotId\": 5,\n        \"m_NodeGUIDSerialized\": \"71457791-070e-4627-8b28-c6048b4a2092\"\n
        \   }\n}"
    m_ActiveMasterNodeGUIDSerialized: 64b0bbae-b36d-4a39-a73f-d42252a1f3cc
  m_GeneratedShader: {fileID: 48506289944378500}
--- !u!48 &48506289944378500
Shader:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: 
  m_ParsedForm:
    m_PropInfo:
      m_Props:
      - m_Name: Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform
        m_Description: 
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
      - m_Name: Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform
        m_Description: 
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: bump
          m_TexDim: 2
      - m_Name: Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform
        m_Description: 
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
      - m_Name: Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform
        m_Description: 
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
    m_SubShaders:
    - m_Passes:
      - m_NameIndices: {}
        m_Type: 0
        m_State:
          serializedVersion: 2
          m_Name: FORWARD
          rtBlend0:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend1:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend2:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend3:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend4:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend5:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend6:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend7:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtSeparateBlend: 0
          zTest:
            val: 4
            name: <noninit>
          zWrite:
            val: 1
            name: <noninit>
          culling:
            val: 2
            name: <noninit>
          offsetFactor:
            val: 0
            name: <noninit>
          offsetUnits:
            val: 0
            name: <noninit>
          alphaToMask:
            val: 0
            name: <noninit>
          stencilOp:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilReadMask:
            val: 255
            name: <noninit>
          stencilWriteMask:
            val: 255
            name: <noninit>
          stencilRef:
            val: 0
            name: <noninit>
          fogStart:
            val: 0
            name: unity_FogStart
          fogEnd:
            val: 0
            name: unity_FogEnd
          fogDensity:
            val: 0
            name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name: <noninit>
            y:
              val: 0
              name: <noninit>
            z:
              val: 0
              name: <noninit>
            w:
              val: 0
              name: <noninit>
            name: unity_FogColor
          fogMode: -1
          gpuProgramID: 18419
          m_Tags:
            tags:
              LIGHTMODE: ForwardBase
              QUEUE: Geometry
              RenderType: Opaque
              SHADOWSUPPORT: true
          m_LOD: 200
          lighting: 0
        m_ProgramMask: 6
        progVertex:
          m_SubPrograms: []
        progFragment:
          m_SubPrograms: []
        progGeometry:
          m_SubPrograms: []
        progHull:
          m_SubPrograms: []
        progDomain:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_NameIndices: {}
        m_Type: 0
        m_State:
          serializedVersion: 2
          m_Name: FORWARD
          rtBlend0:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 1
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 1
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend1:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend2:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend3:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend4:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend5:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend6:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend7:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtSeparateBlend: 0
          zTest:
            val: 4
            name: <noninit>
          zWrite:
            val: 0
            name: <noninit>
          culling:
            val: 2
            name: <noninit>
          offsetFactor:
            val: 0
            name: <noninit>
          offsetUnits:
            val: 0
            name: <noninit>
          alphaToMask:
            val: 0
            name: <noninit>
          stencilOp:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilReadMask:
            val: 255
            name: <noninit>
          stencilWriteMask:
            val: 255
            name: <noninit>
          stencilRef:
            val: 0
            name: <noninit>
          fogStart:
            val: 0
            name: unity_FogStart
          fogEnd:
            val: 0
            name: unity_FogEnd
          fogDensity:
            val: 0
            name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name: <noninit>
            y:
              val: 0
              name: <noninit>
            z:
              val: 0
              name: <noninit>
            w:
              val: 0
              name: <noninit>
            name: unity_FogColor
          fogMode: -1
          gpuProgramID: 87594
          m_Tags:
            tags:
              LIGHTMODE: ForwardAdd
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
          lighting: 0
        m_ProgramMask: 6
        progVertex:
          m_SubPrograms: []
        progFragment:
          m_SubPrograms: []
        progGeometry:
          m_SubPrograms: []
        progHull:
          m_SubPrograms: []
        progDomain:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_NameIndices: {}
        m_Type: 0
        m_State:
          serializedVersion: 2
          m_Name: DEFERRED
          rtBlend0:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend1:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend2:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend3:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend4:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend5:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend6:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend7:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtSeparateBlend: 0
          zTest:
            val: 4
            name: <noninit>
          zWrite:
            val: 1
            name: <noninit>
          culling:
            val: 2
            name: <noninit>
          offsetFactor:
            val: 0
            name: <noninit>
          offsetUnits:
            val: 0
            name: <noninit>
          alphaToMask:
            val: 0
            name: <noninit>
          stencilOp:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilReadMask:
            val: 255
            name: <noninit>
          stencilWriteMask:
            val: 255
            name: <noninit>
          stencilRef:
            val: 0
            name: <noninit>
          fogStart:
            val: 0
            name: unity_FogStart
          fogEnd:
            val: 0
            name: unity_FogEnd
          fogDensity:
            val: 0
            name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name: <noninit>
            y:
              val: 0
              name: <noninit>
            z:
              val: 0
              name: <noninit>
            w:
              val: 0
              name: <noninit>
            name: unity_FogColor
          fogMode: -1
          gpuProgramID: 169603
          m_Tags:
            tags:
              LIGHTMODE: Deferred
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
          lighting: 0
        m_ProgramMask: 6
        progVertex:
          m_SubPrograms: []
        progFragment:
          m_SubPrograms: []
        progGeometry:
          m_SubPrograms: []
        progHull:
          m_SubPrograms: []
        progDomain:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_NameIndices: {}
        m_Type: 0
        m_State:
          serializedVersion: 2
          m_Name: META
          rtBlend0:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend1:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend2:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend3:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend4:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend5:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend6:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtBlend7:
            srcBlend:
              val: 1
              name: <noninit>
            destBlend:
              val: 0
              name: <noninit>
            srcBlendAlpha:
              val: 1
              name: <noninit>
            destBlendAlpha:
              val: 0
              name: <noninit>
            blendOp:
              val: 0
              name: <noninit>
            blendOpAlpha:
              val: 0
              name: <noninit>
            colMask:
              val: 15
              name: <noninit>
          rtSeparateBlend: 0
          zTest:
            val: 4
            name: <noninit>
          zWrite:
            val: 1
            name: <noninit>
          culling:
            val: 0
            name: <noninit>
          offsetFactor:
            val: 0
            name: <noninit>
          offsetUnits:
            val: 0
            name: <noninit>
          alphaToMask:
            val: 0
            name: <noninit>
          stencilOp:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name: <noninit>
            fail:
              val: 0
              name: <noninit>
            zFail:
              val: 0
              name: <noninit>
            comp:
              val: 8
              name: <noninit>
          stencilReadMask:
            val: 255
            name: <noninit>
          stencilWriteMask:
            val: 255
            name: <noninit>
          stencilRef:
            val: 0
            name: <noninit>
          fogStart:
            val: 0
            name: unity_FogStart
          fogEnd:
            val: 0
            name: unity_FogEnd
          fogDensity:
            val: 0
            name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name: <noninit>
            y:
              val: 0
              name: <noninit>
            z:
              val: 0
              name: <noninit>
            w:
              val: 0
              name: <noninit>
            name: unity_FogColor
          fogMode: -1
          gpuProgramID: 201962
          m_Tags:
            tags:
              LIGHTMODE: Meta
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
          lighting: 0
        m_ProgramMask: 6
        progVertex:
          m_SubPrograms: []
        progFragment:
          m_SubPrograms: []
        progGeometry:
          m_SubPrograms: []
        progHull:
          m_SubPrograms: []
        progDomain:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      m_Tags:
        tags:
          QUEUE: Geometry
          RenderType: Opaque
      m_LOD: 200
    m_Name: Graph/UnityEngine.MaterialGraph.MetallicMasterNode71457791-070e-4627-8b28-c6048b4a2092
    m_CustomEditorName: 
    m_FallbackName: Diffuse
    m_Dependencies: []
    m_DisableNoSubshadersMessage: 0
  platforms: 
  offsets: 
  compressedLengths: 
  decompressedLengths: 
  compressedBlob: 
  m_Dependencies:
  - {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
  - {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
  m_NonModifiableTextures:
    Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform: {fileID: 2800000, guid: 6e8d12f68bae2294da814f9d4c81b29a,
      type: 3}
    Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform: {fileID: 2800000, guid: 330f42016073a97418a4aae5517e32c8,
      type: 3}
    Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform: {fileID: 2800000, guid: 5a5e07ee958edbd468227e1d9ac4726a,
      type: 3}
    Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform: {fileID: 2800000, guid: 6e8d12f68bae2294da814f9d4c81b29a,
      type: 3}
  m_ShaderIsBaked: 0
  m_DefaultTextures: {}
  m_CompileInfo:
    m_Snippets:
      18182:
        serializedVersion: 2
        m_Code: "#line 84 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 84
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n#pragma vertex vert\n#pragma fragment
          frag\n#pragma target 2.0\n#pragma multi_compile_shadowcaster\n#include \"UnityCG.cginc\"\n\nstruct
          v2f { \n\tV2F_SHADOW_CASTER;\n};\n\nv2f vert( appdata_base v )\n{\n\tv2f
          o;\n\tTRANSFER_SHADOW_CASTER_NORMALOFFSET(o)\n\treturn o;\n}\n\nfloat4 frag(
          v2f i ) : SV_Target\n{\n\tSHADOW_CASTER_FRAGMENT(i)\n}\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 86
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 9ba1a09ccd43a83dfff46fa0f2d98c45
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - SHADOWS_DEPTH
        - - SHADOWS_CUBE
        m_VariantsBuiltin1:
        - - SHADOWS_DEPTH
        - - SHADOWS_CUBE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: SHADOWS_CUBE SHADOWS_DEPTH
      18419:
        serializedVersion: 2
        m_Code: "#line 39 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma multi_compile_fog\n#pragma
          multi_compile_fwdbase\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n//
          Surface shader code generated based on:\n// vertex modifier: 'vert'\n//
          writes to per-pixel normal: YES\n// writes to emission: YES\n// writes to
          occlusion: YES\n// needs world space reflection vector: no\n// needs world
          space normal vector: YES\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: YES\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: YES\n// needs world space view
          direction for lightmaps: no\n// needs vertex color: no\n// needs VFACE:
          no\n// passes tangent-to-world matrix to pixel shader: YES\n// reads from
          normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_FORWARDBASE\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n#include
          \"AutoLight.cginc\"\n\n#define INTERNAL_DATA half3 internalSurfaceTtoW0;
          half3 internalSurfaceTtoW1; half3 internalSurfaceTtoW2;\n#define WorldReflectionVector(data,normal)
          reflect (data.worldRefl, half3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal)))\n#define WorldNormalVector(data,normal)
          fixed3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal))\n\n// Original surface shader snippet:\n#line
          29 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\r\n\t\t//#pragma target 3.0\r\n\t\t//#pragma
          surface surf Standard vertex:vert\r\n\t\t//#pragma glsl\r\n\t\t//#pragma
          debug\r\n\r\n\t\tinline half4 unity_subtract_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_multiply_half (half4 arg1,
          half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 * arg2;\r\n\t\t}\r\n\t\tinline
          half unity_subtract_half (half arg1, half arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_add_half (half4 arg1, half4
          arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2;\r\n\t\t}\r\n\r\n\t\tsampler2D
          Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform;\r\n\t\tsampler2D Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform;\r\n\t\tsampler2D
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform;\r\n\t\tsampler2D Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform;\r\n\r\n\r\n\t\tstruct
          Input \r\n\t\t{\r\n\t\t\tfloat4 color : COLOR;\r\n\t\t\thalf4 meshUV0;\r\n\t\t\tfloat3
          worldViewDir;\r\n\t\t\tfloat3 worldNormal;\r\n\t\t\tINTERNAL_DATA\r\n\r\n\t\t};\r\n\r\n\t\tvoid
          vert (inout appdata_full v, out Input o)\r\n\t\t{\r\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\r\n\t\t\to.meshUV0
          = v.texcoord;\r\n\r\n\t\t}\r\n\t  \r\n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \r\n\t\t{\r\n\t\t\thalf4 uv0 = IN.meshUV0;\r\n\t\t\tfloat3 worldSpaceViewDirection
          = IN.worldViewDir;\r\n\t\t\tfloat3 worldSpaceNormal = normalize(IN.worldNormal);\r\n\t\t\thalf4
          Texture_631f4909_24f0_4658_baba_c8c4572e0335 = tex2D (Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform,
          uv0.xy);\r\n\t\t\thalf4 Texture_66307d31_2630_4f44_96d4_23139633f2d7 = half4(UnpackNormal(tex2D
          (Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform, uv0.xy)), 0);\r\n\t\t\thalf
          V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform = 0.76;\r\n\t\t\t//
          Subgraph for node SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f\r\n\t\t\tfloat4
          SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1 = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1 = _SinTime;\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2 = V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform;\r\n\t\t\t\thalf
          V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform = 1;\r\n\t\t\t\thalf4
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25 = tex2D (Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform,
          uv0.xy);\r\n\t\t\t\thalf4 SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output
          = unity_subtract_half (V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform,
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25);\r\n\t\t\t\thalf V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform
          = 2.85;\r\n\t\t\t\thalf4 PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output
          = pow (SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output, V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform);\r\n\t\t\t\thalf4
          MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output = unity_multiply_half
          (PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output, SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1);\r\n\t\t\t\thalf4
          AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output = abs (SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2);\r\n\t\t\t\thalf4
          MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output = unity_multiply_half
          (MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output, AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output);\r\n\t\t\t\tSubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1
          = MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform
          = 8;\r\n\t\t\thalf4 ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform
          = half4 (0.05449827, 0.09659335, 0.9264706, 0);\r\n\t\t\t// Subgraph for
          node SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13\r\n\t\t\tfloat4 SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4 SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1
          = V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform;\r\n\t\t\t\tfloat4
          SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2 = ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform;\r\n\t\t\t\thalf
          V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform = 1.03;\r\n\t\t\t\thalf
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output = dot (worldSpaceViewDirection,
          worldSpaceNormal);\r\n\t\t\t\thalf SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output
          = unity_subtract_half (V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform,
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output);\r\n\t\t\t\thalf4 PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output
          = pow (SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1);\r\n\t\t\t\thalf4
          MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output = unity_multiply_half
          (PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2);\r\n\t\t\t\tSubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf4 AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output
          = unity_add_half (SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1,
          SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1);\r\n\t\t\thalf4 Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25
          = tex2D (Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform, uv0.xy);\r\n\t\t\to.Albedo
          = Texture_631f4909_24f0_4658_baba_c8c4572e0335;\r\n\t\t\to.Normal = Texture_66307d31_2630_4f44_96d4_23139633f2d7;\r\n\t\t\to.Emission
          = AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output;\r\n\t\t\to.Occlusion
          = Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25.a;\r\n\r\n\t\t}\r\n\t\t\n\n//
          vertex-to-fragment interpolation data\n// no lightmaps:\n#ifndef LIGHTMAP_ON\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float4 tSpace0 : TEXCOORD0;\n
          \ float4 tSpace1 : TEXCOORD1;\n  float4 tSpace2 : TEXCOORD2;\n  half4 custompack0
          : TEXCOORD3; // meshUV0\n  #if UNITY_SHOULD_SAMPLE_SH\n  half3 sh : TEXCOORD4;
          // SH\n  #endif\n  SHADOW_COORDS(5)\n  UNITY_FOG_COORDS(6)\n  #if SHADER_TARGET
          >= 30\n  float4 lmap : TEXCOORD7;\n  #endif\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n
          \ UNITY_VERTEX_OUTPUT_STEREO\n};\n#endif\n// with lightmaps:\n#ifdef LIGHTMAP_ON\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float4 tSpace0 : TEXCOORD0;\n
          \ float4 tSpace1 : TEXCOORD1;\n  float4 tSpace2 : TEXCOORD2;\n  half4 custompack0
          : TEXCOORD3; // meshUV0\n  float4 lmap : TEXCOORD4;\n  SHADOW_COORDS(5)\n
          \ UNITY_FOG_COORDS(6)\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n#endif\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  Input customInputData;\n
          \ vert (v, customInputData);\n  o.custompack0.xyzw = customInputData.meshUV0;\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n  fixed tangentSign
          = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3 worldBinormal =
          cross(worldNormal, worldTangent) * tangentSign;\n  o.tSpace0 = float4(worldTangent.x,
          worldBinormal.x, worldNormal.x, worldPos.x);\n  o.tSpace1 = float4(worldTangent.y,
          worldBinormal.y, worldNormal.y, worldPos.y);\n  o.tSpace2 = float4(worldTangent.z,
          worldBinormal.z, worldNormal.z, worldPos.z);\n  #ifdef DYNAMICLIGHTMAP_ON\n
          \ o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;\n
          \ #endif\n  #ifdef LIGHTMAP_ON\n  o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy
          + unity_LightmapST.zw;\n  #endif\n\n  // SH/ambient and vertex lights\n
          \ #ifndef LIGHTMAP_ON\n    #if UNITY_SHOULD_SAMPLE_SH\n      o.sh = 0;\n
          \     // Approximated illumination from non-important point lights\n      #ifdef
          VERTEXLIGHT_ON\n        o.sh += Shade4PointLights (\n          unity_4LightPosX0,
          unity_4LightPosY0, unity_4LightPosZ0,\n          unity_LightColor[0].rgb,
          unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,\n
          \         unity_4LightAtten0, worldPos, worldNormal);\n      #endif\n      o.sh
          = ShadeSHPerVertex (worldNormal, o.sh);\n    #endif\n  #endif // !LIGHTMAP_ON\n\n
          \ TRANSFER_SHADOW(o); // pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.color.x = 1.0;\n  surfIN.meshUV0.x = 1.0;\n  surfIN.worldViewDir.x
          = 1.0;\n  surfIN.worldNormal.x = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n
          \ float3 worldPos = float3(IN.tSpace0.w, IN.tSpace1.w, IN.tSpace2.w);\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3
          worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n  surfIN.worldNormal.x
          = IN.tSpace0.z;\n  surfIN.worldNormal.y = IN.tSpace1.z;\n  surfIN.worldNormal.z
          = IN.tSpace2.z;\n  surfIN.internalSurfaceTtoW0 = IN.tSpace0.xyz;\n  surfIN.internalSurfaceTtoW1
          = IN.tSpace1.xyz;\n  surfIN.internalSurfaceTtoW2 = IN.tSpace2.xyz;\n  surfIN.worldViewDir
          = worldViewDir;\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o
          = (SurfaceOutputStandard)0;\n  #else\n  SurfaceOutputStandard o;\n  #endif\n
          \ o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion
          = 1.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\n\n  // compute lighting & shadowing factor\n
          \ UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)\n  fixed4 c = 0;\n  fixed3
          worldN;\n  worldN.x = dot(IN.tSpace0.xyz, o.Normal);\n  worldN.y = dot(IN.tSpace1.xyz,
          o.Normal);\n  worldN.z = dot(IN.tSpace2.xyz, o.Normal);\n  o.Normal = worldN;\n\n
          \ // Setup lighting environment\n  UnityGI gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI,
          gi);\n  gi.indirect.diffuse = 0;\n  gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n
          \     gi.light.color = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n
          \ #endif\n  // Call GI (lightmaps/SH/reflections) lighting function\n  UnityGIInput
          giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);\n  giInput.light
          = gi.light;\n  giInput.worldPos = worldPos;\n  giInput.worldViewDir = worldViewDir;\n
          \ giInput.atten = atten;\n  #if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n
          \   giInput.lightmapUV = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n
          \ #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n    giInput.ambient = IN.sh;\n  #else\n
          \   giInput.ambient.rgb = 0.0;\n  #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n
          \ giInput.probeHDR[1] = unity_SpecCube1_HDR;\n  #if UNITY_SPECCUBE_BLENDING
          || UNITY_SPECCUBE_BOX_PROJECTION\n    giInput.boxMin[0] = unity_SpecCube0_BoxMin;
          // .w holds lerp value for blending\n  #endif\n  #if UNITY_SPECCUBE_BOX_PROJECTION\n
          \   giInput.boxMax[0] = unity_SpecCube0_BoxMax;\n    giInput.probePosition[0]
          = unity_SpecCube0_ProbePosition;\n    giInput.boxMax[1] = unity_SpecCube1_BoxMax;\n
          \   giInput.boxMin[1] = unity_SpecCube1_BoxMin;\n    giInput.probePosition[1]
          = unity_SpecCube1_ProbePosition;\n  #endif\n  LightingStandard_GI(o, giInput,
          gi);\n\n  // realtime lighting: call lighting function\n  c += LightingStandard
          (o, worldViewDir, gi);\n  c.rgb += o.Emission;\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 41
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 21ccb335112070d6ecb2fbc3793b3f7c
        m_FromOther: 0
        m_Language: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - DIRECTIONAL
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        m_VariantsBuiltin1:
        - - DIRECTIONAL
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRLIGHTMAP_COMBINED DIRLIGHTMAP_SEPARATE DYNAMICLIGHTMAP_ON
          LIGHTMAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
      59918:
        serializedVersion: 2
        m_Code: "#line 18 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_fwdbase\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: no\n//
          1 texcoords actually used\n//   float2 _MainTex\n#define UNITY_PASS_FORWARDBASE\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"AutoLight.cginc\"\n\n#define
          INTERNAL_DATA\n#define WorldReflectionVector(data,normal) data.worldRefl\n#define
          WorldNormalVector(data,normal) normal\n\n// Original surface shader snippet:\n#line
          8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment
          interpolation data\n// no lightmaps:\n#ifndef LIGHTMAP_ON\nstruct v2f_surf
          {\n  float4 pos : SV_POSITION;\n  float2 pack0 : TEXCOORD0; // _MainTex\n
          \ half3 worldNormal : TEXCOORD1;\n  float3 worldPos : TEXCOORD2;\n  #if
          UNITY_SHOULD_SAMPLE_SH\n  half3 sh : TEXCOORD3; // SH\n  #endif\n  SHADOW_COORDS(4)\n
          \ UNITY_FOG_COORDS(5)\n  #if SHADER_TARGET >= 30\n  float4 lmap : TEXCOORD6;\n
          \ #endif\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n#endif\n//
          with lightmaps:\n#ifdef LIGHTMAP_ON\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n
          \ float2 pack0 : TEXCOORD0; // _MainTex\n  half3 worldNormal : TEXCOORD1;\n
          \ float3 worldPos : TEXCOORD2;\n  float4 lmap : TEXCOORD3;\n  SHADOW_COORDS(4)\n
          \ UNITY_FOG_COORDS(5)\n  #ifdef DIRLIGHTMAP_COMBINED\n  fixed3 tSpace0 :
          TEXCOORD6;\n  fixed3 tSpace1 : TEXCOORD7;\n  fixed3 tSpace2 : TEXCOORD8;\n
          \ #endif\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n#endif\nfloat4
          _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf (appdata_full v) {\n
          \ UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ UNITY_TRANSFER_INSTANCE_ID(v,o);\n  UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  #if defined(LIGHTMAP_ON)
          && defined(DIRLIGHTMAP_COMBINED)\n  fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n
          \ fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3
          worldBinormal = cross(worldNormal, worldTangent) * tangentSign;\n  #endif\n
          \ #if defined(LIGHTMAP_ON) && defined(DIRLIGHTMAP_COMBINED)\n  o.tSpace0
          = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n
          \ o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n
          \ o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n
          \ #endif\n  o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n  #ifdef
          DYNAMICLIGHTMAP_ON\n  o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy
          + unity_DynamicLightmapST.zw;\n  #endif\n  #ifdef LIGHTMAP_ON\n  o.lmap.xy
          = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  #endif\n\n
          \ // SH/ambient and vertex lights\n  #ifndef LIGHTMAP_ON\n    #if UNITY_SHOULD_SAMPLE_SH\n
          \     o.sh = 0;\n      // Approximated illumination from non-important point
          lights\n      #ifdef VERTEXLIGHT_ON\n        o.sh += Shade4PointLights (\n
          \         unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0,\n          unity_LightColor[0].rgb,
          unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,\n
          \         unity_4LightAtten0, worldPos, worldNormal);\n      #endif\n      o.sh
          = ShadeSHPerVertex (worldNormal, o.sh);\n    #endif\n  #endif // !LIGHTMAP_ON\n\n
          \ TRANSFER_SHADOW(o); // pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n
          \ normalWorldVertex = IN.worldNormal;\n\n  // call surface function\n  surf
          (surfIN, o);\n\n  // compute lighting & shadowing factor\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  // Call
          GI (lightmaps/SH/reflections) lighting function\n  UnityGIInput giInput;\n
          \ UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);\n  giInput.light = gi.light;\n
          \ giInput.worldPos = worldPos;\n  giInput.atten = atten;\n  #if defined(LIGHTMAP_ON)
          || defined(DYNAMICLIGHTMAP_ON)\n    giInput.lightmapUV = IN.lmap;\n  #else\n
          \   giInput.lightmapUV = 0.0;\n  #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n
          \   giInput.ambient = IN.sh;\n  #else\n    giInput.ambient.rgb = 0.0;\n
          \ #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n  giInput.probeHDR[1]
          = unity_SpecCube1_HDR;\n  #if UNITY_SPECCUBE_BLENDING || UNITY_SPECCUBE_BOX_PROJECTION\n
          \   giInput.boxMin[0] = unity_SpecCube0_BoxMin; // .w holds lerp value for
          blending\n  #endif\n  #if UNITY_SPECCUBE_BOX_PROJECTION\n    giInput.boxMax[0]
          = unity_SpecCube0_BoxMax;\n    giInput.probePosition[0] = unity_SpecCube0_ProbePosition;\n
          \   giInput.boxMax[1] = unity_SpecCube1_BoxMax;\n    giInput.boxMin[1] =
          unity_SpecCube1_BoxMin;\n    giInput.probePosition[1] = unity_SpecCube1_ProbePosition;\n
          \ #endif\n  LightingLambert_GI(o, giInput, gi);\n\n  // realtime lighting:
          call lighting function\n  c += LightingLambert (o, gi);\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 20
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: b321da649a84b22d7b293a5c7ed29f5e
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - DIRECTIONAL
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        m_VariantsBuiltin1:
        - - DIRECTIONAL
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - DIRECTIONAL
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRLIGHTMAP_COMBINED DIRLIGHTMAP_SEPARATE DYNAMICLIGHTMAP_ON
          LIGHTMAP_ON SHADOWS_SCREEN VERTEXLIGHT_ON
      78978:
        serializedVersion: 2
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// ES2.0/WebGL/3DS can not
          do loops with non-constant-expression iteration counts :(\n#if defined(SHADER_API_GLES)\n
          \ #define LIGHT_LOOP_LIMIT 8\n#elif defined(SHADER_API_N3DS)\n  #define
          LIGHT_LOOP_LIMIT 4\n#else\n  #define LIGHT_LOOP_LIMIT unity_VertexLightParams.x\n#endif\n#define
          ENABLE_SPECULAR (!defined(SHADER_API_N3DS))\n\n// Compile specialized variants
          for when positional (point/spot) and spot lights are present\n#pragma multi_compile
          __ POINT SPOT\n\n// Compute illumination from one light, given attenuation\nhalf3
          computeLighting (int idx, half3 dirToLight, half3 eyeNormal, half3 viewDir,
          half4 diffuseColor, half shininess, half atten, inout half3 specColor) {\n
          \ half NdotL = max(dot(eyeNormal, dirToLight), 0.0);\n  // diffuse\n  half3
          color = NdotL * diffuseColor.rgb * unity_LightColor[idx].rgb;\n  // specular\n
          \ if (NdotL > 0.0) {\n    half3 h = normalize(dirToLight + viewDir);\n    half
          HdotN = max(dot(eyeNormal, h), 0.0);\n    half sp = saturate(pow(HdotN,
          shininess));\n    specColor += (atten * sp) * unity_LightColor[idx].rgb;\n
          \ }\n  return color * atten;\n}\n\n// Compute attenuation & illumination
          from one light\nhalf3 computeOneLight(int idx, float3 eyePosition, half3
          eyeNormal, half3 viewDir, half4 diffuseColor, half shininess, inout half3
          specColor) {\n  float3 dirToLight = unity_LightPosition[idx].xyz;\n  half
          att = 1.0;\n  #if defined(POINT) || defined(SPOT)\n    dirToLight -= eyePosition
          * unity_LightPosition[idx].w;\n    // distance attenuation\n    float distSqr
          = dot(dirToLight, dirToLight);\n    att /= (1.0 + unity_LightAtten[idx].z
          * distSqr);\n    if (unity_LightPosition[idx].w != 0 && distSqr > unity_LightAtten[idx].w)
          att = 0.0; // set to 0 if outside of range\n    distSqr = max(distSqr, 0.000001);
          // don't produce NaNs if some vertex position overlaps with the light\n
          \   dirToLight *= rsqrt(distSqr);\n    #if defined(SPOT)\n      // spot
          angle attenuation\n      half rho = max(dot(dirToLight, unity_SpotDirection[idx].xyz),
          0.0);\n      half spotAtt = (rho - unity_LightAtten[idx].x) * unity_LightAtten[idx].y;\n
          \     att *= saturate(spotAtt);\n    #endif\n  #endif\n  att *= 0.5; //
          passed in light colors are 2x brighter than what used to be in FFP\n  return
          min (computeLighting (idx, dirToLight, eyeNormal, viewDir, diffuseColor,
          shininess, att, specColor), 1.0);\n}\n\n// uniforms\nhalf4 _Color;\nhalf4
          _SpecColor;\nhalf4 _Emission;\nhalf _Shininess;\nint4 unity_VertexLightParams;
          // x: light count, y: zero, z: one (y/z needed by d3d9 vs loop instruction)\nfloat4
          _MainTex_ST;\n\n// vertex shader input data\nstruct appdata {\n  float3
          pos : POSITION;\n  float3 normal : NORMAL;\n  float3 uv0 : TEXCOORD0;\n
          \ UNITY_VERTEX_INPUT_INSTANCE_ID\n};\n\n// vertex-to-fragment interpolators\nstruct
          v2f {\n  fixed4 color : COLOR0;\n  #if ENABLE_SPECULAR\n  fixed3 specColor
          : COLOR1;\n  #endif\n  float2 uv0 : TEXCOORD0;\n  #if USING_FOG\n    fixed
          fog : TEXCOORD1;\n  #endif\n  float4 pos : SV_POSITION;\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\n//
          vertex shader\nv2f vert (appdata IN) {\n  v2f o;\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  half4 color = half4(0,0,0,1.1);\n
          \ float3 eyePos = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3
          eyeNormal = normalize (mul ((float3x3)UNITY_MATRIX_IT_MV, IN.normal).xyz);\n
          \ half3 viewDir = 0.0;\n  viewDir = -normalize (eyePos);\n  // lighting\n
          \ half3 lcolor = _Emission.rgb + _Color.rgb * glstate_lightmodel_ambient.rgb;\n
          \ half3 specColor = 0.0;\n  half shininess = _Shininess * 128.0;\n  for
          (int il = 0; il < LIGHT_LOOP_LIMIT; ++il) {\n    lcolor += computeOneLight(il,
          eyePos, eyeNormal, viewDir, _Color, shininess, specColor);\n  }\n  color.rgb
          = lcolor.rgb;\n  color.a = _Color.a;\n  specColor *= _SpecColor.rgb;\n  o.color
          = saturate(color);\n  #if ENABLE_SPECULAR\n  o.specColor = saturate(specColor);\n
          \ #endif\n  // compute texture coordinates\n  o.uv0 = IN.uv0.xy * _MainTex_ST.xy
          + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n    float fogCoord = length(eyePos.xyz);
          // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n    o.fog
          = saturate(unityFogFactor);\n  #endif\n  // transform position\n  o.pos
          = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\n\n// fragment shader\nfixed4 frag (v2f IN) : SV_Target {\n  fixed4
          col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture #0\n  tex = tex2D
          (_MainTex, IN.uv0.xy);\n  col.rgb = tex * IN.color;\n  col *= 2;\n  col.a
          = fixed4(1,1,1,1).a;\n  #if ENABLE_SPECULAR\n  // add specular color\n  col.rgb
          += IN.specColor;\n  #endif\n  // fog\n  #if USING_FOG\n    col.rgb = lerp
          (unity_FogColor.rgb, col.rgb, IN.fog);\n  #endif\n  return col;\n}\n\n//
          texenvs\n//! TexEnv0: 02010103 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 1
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - - _
          - POINT
          - SPOT
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - - _
          - POINT
          - SPOT
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR POINT SPOT
        m_BuiltinKeywords: 
      87594:
        serializedVersion: 2
        m_Code: "#line 313 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma multi_compile_fog\n#pragma
          multi_compile_fwdadd\n#pragma skip_variants INSTANCING_ON\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          vertex modifier: 'vert'\n// writes to per-pixel normal: YES\n// writes to
          emission: YES\n// writes to occlusion: YES\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: YES\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          YES\n// reads from normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_FORWARDADD\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n#include
          \"AutoLight.cginc\"\n\n#define INTERNAL_DATA half3 internalSurfaceTtoW0;
          half3 internalSurfaceTtoW1; half3 internalSurfaceTtoW2;\n#define WorldReflectionVector(data,normal)
          reflect (data.worldRefl, half3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal)))\n#define WorldNormalVector(data,normal)
          fixed3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal))\n\n// Original surface shader snippet:\n#line
          29 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\r\n\t\t//#pragma target 3.0\r\n\t\t//#pragma
          surface surf Standard vertex:vert\r\n\t\t//#pragma glsl\r\n\t\t//#pragma
          debug\r\n\r\n\t\tinline half4 unity_subtract_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_multiply_half (half4 arg1,
          half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 * arg2;\r\n\t\t}\r\n\t\tinline
          half unity_subtract_half (half arg1, half arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_add_half (half4 arg1, half4
          arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2;\r\n\t\t}\r\n\r\n\t\tsampler2D
          Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform;\r\n\t\tsampler2D Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform;\r\n\t\tsampler2D
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform;\r\n\t\tsampler2D Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform;\r\n\r\n\r\n\t\tstruct
          Input \r\n\t\t{\r\n\t\t\tfloat4 color : COLOR;\r\n\t\t\thalf4 meshUV0;\r\n\t\t\tfloat3
          worldViewDir;\r\n\t\t\tfloat3 worldNormal;\r\n\t\t\tINTERNAL_DATA\r\n\r\n\t\t};\r\n\r\n\t\tvoid
          vert (inout appdata_full v, out Input o)\r\n\t\t{\r\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\r\n\t\t\to.meshUV0
          = v.texcoord;\r\n\r\n\t\t}\r\n\t  \r\n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \r\n\t\t{\r\n\t\t\thalf4 uv0 = IN.meshUV0;\r\n\t\t\tfloat3 worldSpaceViewDirection
          = IN.worldViewDir;\r\n\t\t\tfloat3 worldSpaceNormal = normalize(IN.worldNormal);\r\n\t\t\thalf4
          Texture_631f4909_24f0_4658_baba_c8c4572e0335 = tex2D (Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform,
          uv0.xy);\r\n\t\t\thalf4 Texture_66307d31_2630_4f44_96d4_23139633f2d7 = half4(UnpackNormal(tex2D
          (Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform, uv0.xy)), 0);\r\n\t\t\thalf
          V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform = 0.76;\r\n\t\t\t//
          Subgraph for node SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f\r\n\t\t\tfloat4
          SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1 = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1 = _SinTime;\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2 = V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform;\r\n\t\t\t\thalf
          V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform = 1;\r\n\t\t\t\thalf4
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25 = tex2D (Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform,
          uv0.xy);\r\n\t\t\t\thalf4 SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output
          = unity_subtract_half (V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform,
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25);\r\n\t\t\t\thalf V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform
          = 2.85;\r\n\t\t\t\thalf4 PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output
          = pow (SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output, V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform);\r\n\t\t\t\thalf4
          MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output = unity_multiply_half
          (PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output, SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1);\r\n\t\t\t\thalf4
          AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output = abs (SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2);\r\n\t\t\t\thalf4
          MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output = unity_multiply_half
          (MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output, AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output);\r\n\t\t\t\tSubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1
          = MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform
          = 8;\r\n\t\t\thalf4 ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform
          = half4 (0.05449827, 0.09659335, 0.9264706, 0);\r\n\t\t\t// Subgraph for
          node SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13\r\n\t\t\tfloat4 SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4 SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1
          = V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform;\r\n\t\t\t\tfloat4
          SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2 = ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform;\r\n\t\t\t\thalf
          V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform = 1.03;\r\n\t\t\t\thalf
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output = dot (worldSpaceViewDirection,
          worldSpaceNormal);\r\n\t\t\t\thalf SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output
          = unity_subtract_half (V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform,
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output);\r\n\t\t\t\thalf4 PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output
          = pow (SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1);\r\n\t\t\t\thalf4
          MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output = unity_multiply_half
          (PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2);\r\n\t\t\t\tSubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf4 AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output
          = unity_add_half (SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1,
          SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1);\r\n\t\t\thalf4 Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25
          = tex2D (Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform, uv0.xy);\r\n\t\t\to.Albedo
          = Texture_631f4909_24f0_4658_baba_c8c4572e0335;\r\n\t\t\to.Normal = Texture_66307d31_2630_4f44_96d4_23139633f2d7;\r\n\t\t\to.Emission
          = AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output;\r\n\t\t\to.Occlusion
          = Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25.a;\r\n\r\n\t\t}\r\n\t\t\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  fixed3 tSpace0 : TEXCOORD0;\n  fixed3 tSpace1 : TEXCOORD1;\n
          \ fixed3 tSpace2 : TEXCOORD2;\n  float3 worldPos : TEXCOORD3;\n  half4 custompack0
          : TEXCOORD4; // meshUV0\n  SHADOW_COORDS(5)\n  UNITY_FOG_COORDS(6)\n};\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ Input customInputData;\n  vert (v, customInputData);\n  o.custompack0.xyzw
          = customInputData.meshUV0;\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal
          = UnityObjectToWorldNormal(v.normal);\n  fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n
          \ fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3
          worldBinormal = cross(worldNormal, worldTangent) * tangentSign;\n  o.tSpace0
          = fixed3(worldTangent.x, worldBinormal.x, worldNormal.x);\n  o.tSpace1 =
          fixed3(worldTangent.y, worldBinormal.y, worldNormal.y);\n  o.tSpace2 = fixed3(worldTangent.z,
          worldBinormal.z, worldNormal.z);\n  o.worldPos = worldPos;\n\n  TRANSFER_SHADOW(o);
          // pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.color.x = 1.0;\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.worldViewDir.x = 1.0;\n  surfIN.worldNormal.x
          = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3 worldPos = IN.worldPos;\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3
          worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n  #ifdef UNITY_COMPILER_HLSL\n
          \ SurfaceOutputStandard o = (SurfaceOutputStandard)0;\n  #else\n  SurfaceOutputStandard
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Alpha = 0.0;\n
          \ o.Occlusion = 1.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  //
          call surface function\n  surf (surfIN, o);\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n  fixed3 worldN;\n  worldN.x = dot(IN.tSpace0.xyz,
          o.Normal);\n  worldN.y = dot(IN.tSpace1.xyz, o.Normal);\n  worldN.z = dot(IN.tSpace2.xyz,
          o.Normal);\n  o.Normal = worldN;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  gi.light.color
          *= atten;\n  c += LightingStandard (o, worldViewDir, gi);\n  c.a = 0.0;\n
          \ UNITY_APPLY_FOG(IN.fogCoord, c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n
          \ return c;\n}\n\n"
        m_AssetPath: Assets
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 315
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 21ccb335112070d6ecb2fbc3793b3f7c
        m_FromOther: 0
        m_Language: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin1:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRECTIONAL_COOKIE POINT POINT_COOKIE SPOT
      130567:
        serializedVersion: 2
        m_Code: "#line 207 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_fwdadd\n#pragma skip_variants INSTANCING_ON\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n// Surface
          shader code generated based on:\n// writes to per-pixel normal: no\n// writes
          to emission: no\n// writes to occlusion: no\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: no\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          no\n// reads from normal: no\n// 1 texcoords actually used\n//   float2
          _MainTex\n#define UNITY_PASS_FORWARDADD\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n#include \"AutoLight.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment
          interpolation data\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n  float2
          pack0 : TEXCOORD0; // _MainTex\n  half3 worldNormal : TEXCOORD1;\n  float3
          worldPos : TEXCOORD2;\n  SHADOW_COORDS(3)\n  UNITY_FOG_COORDS(4)\n};\nfloat4
          _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf (appdata_full v) {\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ o.pack0.xy = TRANSFORM_TEX(v.texcoord, _MainTex);\n  float3 worldPos =
          mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n\n  TRANSFER_SHADOW(o);
          // pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.uv_MainTex.x
          = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3 worldPos = IN.worldPos;\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n
          \ o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  gi.light.color
          *= atten;\n  c += LightingLambert (o, gi);\n  c.a = 0.0;\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 209
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: b321da649a84b22d7b293a5c7ed29f5e
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin1:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRECTIONAL_COOKIE POINT POINT_COOKIE SPOT
      133240:
        serializedVersion: 2
        m_Code: "#line 110 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: YES\n//
          0 texcoords actually used\n#define UNITY_PASS_PREPASSBASE\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment
          interpolation data\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n  half3
          worldNormal : TEXCOORD0;\n  float3 worldPos : TEXCOORD1;\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n
          \ UNITY_VERTEX_OUTPUT_STEREO\n};\n\n// vertex shader\nv2f_surf vert_surf
          (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ UNITY_TRANSFER_INSTANCE_ID(v,o);\n  UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n  return o;\n}\n\n//
          fragment shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  float3 worldPos = IN.worldPos;\n  #ifndef
          USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n
          \ o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n\n  // output normal and
          specular\n  fixed4 res;\n  res.rgb = o.Normal * 0.5 + 0.5;\n  res.a = o.Specular;\n
          \ return res;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 112
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: c08b02add17845b514589f4314ee739d
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
      153878:
        serializedVersion: 2
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// uniforms\nfloat4 _MainTex_ST;\n\n//
          vertex shader input data\nstruct appdata {\n  float3 pos : POSITION;\n  float3
          uv1 : TEXCOORD1;\n  float3 uv0 : TEXCOORD0;\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n};\n\n//
          vertex-to-fragment interpolators\nstruct v2f {\n  fixed4 color : COLOR0;\n
          \ float2 uv0 : TEXCOORD0;\n  float2 uv1 : TEXCOORD1;\n  #if USING_FOG\n
          \   fixed fog : TEXCOORD2;\n  #endif\n  float4 pos : SV_POSITION;\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\n//
          vertex shader\nv2f vert (appdata IN) {\n  v2f o;\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  half4 color = half4(0,0,0,1.1);\n
          \ float3 eyePos = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3
          viewDir = 0.0;\n  o.color = saturate(color);\n  // compute texture coordinates\n
          \ o.uv0 = IN.uv1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  o.uv1
          = IN.uv0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n
          \   float fogCoord = length(eyePos.xyz); // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n
          \   o.fog = saturate(unityFogFactor);\n  #endif\n  // transform position\n
          \ o.pos = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\nfixed4 _Color;\n\n// fragment shader\nfixed4 frag (v2f IN) :
          SV_Target {\n  fixed4 col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture
          #0\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap, IN.uv0.xy);\n  col = tex
          * _Color;\n  // SetTexture #1\n  tex = tex2D (_MainTex, IN.uv1.xy);\n  col.rgb
          = tex * col;\n  col *= 2;\n  col.a = fixed4(1,1,1,1).a;\n  // fog\n  #if
          USING_FOG\n    col.rgb = lerp (unity_FogColor.rgb, col.rgb, IN.fog);\n  #endif\n
          \ return col;\n}\n\n// texenvs\n//! TexEnv0: 01010102 01010102 [unity_Lightmap]
          [_Color] usesLightmapST\n//! TexEnv1: 02010100 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 1
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: 
      169603:
        serializedVersion: 2
        m_Code: "#line 223 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma exclude_renderers nomrt\n#pragma
          multi_compile_prepassfinal\n#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n// Surface
          shader code generated based on:\n// vertex modifier: 'vert'\n// writes to
          per-pixel normal: YES\n// writes to emission: YES\n// writes to occlusion:
          YES\n// needs world space reflection vector: no\n// needs world space normal
          vector: YES\n// needs screen space position: no\n// needs world space position:
          no\n// needs view direction: no\n// needs world space view direction: YES\n//
          needs world space position for lighting: YES\n// needs world space view
          direction for lighting: YES\n// needs world space view direction for lightmaps:
          no\n// needs vertex color: no\n// needs VFACE: no\n// passes tangent-to-world
          matrix to pixel shader: YES\n// reads from normal: no\n// 0 texcoords actually
          used\n#define UNITY_PASS_DEFERRED\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n\n#define INTERNAL_DATA
          half3 internalSurfaceTtoW0; half3 internalSurfaceTtoW1; half3 internalSurfaceTtoW2;\n#define
          WorldReflectionVector(data,normal) reflect (data.worldRefl, half3(dot(data.internalSurfaceTtoW0,normal),
          dot(data.internalSurfaceTtoW1,normal), dot(data.internalSurfaceTtoW2,normal)))\n#define
          WorldNormalVector(data,normal) fixed3(dot(data.internalSurfaceTtoW0,normal),
          dot(data.internalSurfaceTtoW1,normal), dot(data.internalSurfaceTtoW2,normal))\n\n//
          Original surface shader snippet:\n#line 29 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\r\n\t\t//#pragma target 3.0\r\n\t\t//#pragma
          surface surf Standard vertex:vert\r\n\t\t//#pragma glsl\r\n\t\t//#pragma
          debug\r\n\r\n\t\tinline half4 unity_subtract_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_multiply_half (half4 arg1,
          half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 * arg2;\r\n\t\t}\r\n\t\tinline
          half unity_subtract_half (half arg1, half arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_add_half (half4 arg1, half4
          arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2;\r\n\t\t}\r\n\r\n\t\tsampler2D
          Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform;\r\n\t\tsampler2D Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform;\r\n\t\tsampler2D
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform;\r\n\t\tsampler2D Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform;\r\n\r\n\r\n\t\tstruct
          Input \r\n\t\t{\r\n\t\t\tfloat4 color : COLOR;\r\n\t\t\thalf4 meshUV0;\r\n\t\t\tfloat3
          worldViewDir;\r\n\t\t\tfloat3 worldNormal;\r\n\t\t\tINTERNAL_DATA\r\n\r\n\t\t};\r\n\r\n\t\tvoid
          vert (inout appdata_full v, out Input o)\r\n\t\t{\r\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\r\n\t\t\to.meshUV0
          = v.texcoord;\r\n\r\n\t\t}\r\n\t  \r\n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \r\n\t\t{\r\n\t\t\thalf4 uv0 = IN.meshUV0;\r\n\t\t\tfloat3 worldSpaceViewDirection
          = IN.worldViewDir;\r\n\t\t\tfloat3 worldSpaceNormal = normalize(IN.worldNormal);\r\n\t\t\thalf4
          Texture_631f4909_24f0_4658_baba_c8c4572e0335 = tex2D (Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform,
          uv0.xy);\r\n\t\t\thalf4 Texture_66307d31_2630_4f44_96d4_23139633f2d7 = half4(UnpackNormal(tex2D
          (Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform, uv0.xy)), 0);\r\n\t\t\thalf
          V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform = 0.76;\r\n\t\t\t//
          Subgraph for node SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f\r\n\t\t\tfloat4
          SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1 = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1 = _SinTime;\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2 = V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform;\r\n\t\t\t\thalf
          V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform = 1;\r\n\t\t\t\thalf4
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25 = tex2D (Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform,
          uv0.xy);\r\n\t\t\t\thalf4 SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output
          = unity_subtract_half (V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform,
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25);\r\n\t\t\t\thalf V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform
          = 2.85;\r\n\t\t\t\thalf4 PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output
          = pow (SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output, V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform);\r\n\t\t\t\thalf4
          MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output = unity_multiply_half
          (PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output, SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1);\r\n\t\t\t\thalf4
          AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output = abs (SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2);\r\n\t\t\t\thalf4
          MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output = unity_multiply_half
          (MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output, AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output);\r\n\t\t\t\tSubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1
          = MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform
          = 8;\r\n\t\t\thalf4 ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform
          = half4 (0.05449827, 0.09659335, 0.9264706, 0);\r\n\t\t\t// Subgraph for
          node SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13\r\n\t\t\tfloat4 SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4 SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1
          = V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform;\r\n\t\t\t\tfloat4
          SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2 = ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform;\r\n\t\t\t\thalf
          V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform = 1.03;\r\n\t\t\t\thalf
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output = dot (worldSpaceViewDirection,
          worldSpaceNormal);\r\n\t\t\t\thalf SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output
          = unity_subtract_half (V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform,
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output);\r\n\t\t\t\thalf4 PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output
          = pow (SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1);\r\n\t\t\t\thalf4
          MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output = unity_multiply_half
          (PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2);\r\n\t\t\t\tSubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf4 AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output
          = unity_add_half (SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1,
          SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1);\r\n\t\t\thalf4 Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25
          = tex2D (Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform, uv0.xy);\r\n\t\t\to.Albedo
          = Texture_631f4909_24f0_4658_baba_c8c4572e0335;\r\n\t\t\to.Normal = Texture_66307d31_2630_4f44_96d4_23139633f2d7;\r\n\t\t\to.Emission
          = AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output;\r\n\t\t\to.Occlusion
          = Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25.a;\r\n\r\n\t\t}\r\n\t\t\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  float4 tSpace0 : TEXCOORD0;\n  float4 tSpace1 : TEXCOORD1;\n
          \ float4 tSpace2 : TEXCOORD2;\n  half4 custompack0 : TEXCOORD3; // meshUV0\n#ifndef
          DIRLIGHTMAP_OFF\n  half3 viewDir : TEXCOORD4;\n#endif\n  float4 lmap : TEXCOORD5;\n#ifndef
          LIGHTMAP_ON\n  #if UNITY_SHOULD_SAMPLE_SH\n    half3 sh : TEXCOORD6; //
          SH\n  #endif\n#else\n  #ifdef DIRLIGHTMAP_OFF\n    float4 lmapFadePos :
          TEXCOORD6;\n  #endif\n#endif\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  Input customInputData;\n
          \ vert (v, customInputData);\n  o.custompack0.xyzw = customInputData.meshUV0;\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n  fixed tangentSign
          = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3 worldBinormal =
          cross(worldNormal, worldTangent) * tangentSign;\n  o.tSpace0 = float4(worldTangent.x,
          worldBinormal.x, worldNormal.x, worldPos.x);\n  o.tSpace1 = float4(worldTangent.y,
          worldBinormal.y, worldNormal.y, worldPos.y);\n  o.tSpace2 = float4(worldTangent.z,
          worldBinormal.z, worldNormal.z, worldPos.z);\n  float3 viewDirForLight =
          UnityWorldSpaceViewDir(worldPos);\n  #ifndef DIRLIGHTMAP_OFF\n  o.viewDir.x
          = dot(viewDirForLight, worldTangent);\n  o.viewDir.y = dot(viewDirForLight,
          worldBinormal);\n  o.viewDir.z = dot(viewDirForLight, worldNormal);\n  #endif\n#ifdef
          DYNAMICLIGHTMAP_ON\n  o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy
          + unity_DynamicLightmapST.zw;\n#else\n  o.lmap.zw = 0;\n#endif\n#ifdef LIGHTMAP_ON\n
          \ o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n
          \ #ifdef DIRLIGHTMAP_OFF\n    o.lmapFadePos.xyz = (mul(unity_ObjectToWorld,
          v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w;\n
          \   o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w);\n
          \ #endif\n#else\n  o.lmap.xy = 0;\n    #if UNITY_SHOULD_SAMPLE_SH\n      o.sh
          = 0;\n      o.sh = ShadeSHPerVertex (worldNormal, o.sh);\n    #endif\n#endif\n
          \ return o;\n}\n#ifdef LIGHTMAP_ON\nfloat4 unity_LightmapFade;\n#endif\nfixed4
          unity_Ambient;\n\n// fragment shader\nvoid frag_surf (v2f_surf IN,\n    out
          half4 outGBuffer0 : SV_Target0,\n    out half4 outGBuffer1 : SV_Target1,\n
          \   out half4 outGBuffer2 : SV_Target2,\n    out half4 outEmission : SV_Target3)
          {\n  UNITY_SETUP_INSTANCE_ID(IN);\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.color.x = 1.0;\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.worldViewDir.x = 1.0;\n  surfIN.worldNormal.x
          = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3 worldPos = float3(IN.tSpace0.w,
          IN.tSpace1.w, IN.tSpace2.w);\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3
          lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3
          lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3 worldViewDir =
          normalize(UnityWorldSpaceViewDir(worldPos));\n  surfIN.worldNormal.x = IN.tSpace0.z;\n
          \ surfIN.worldNormal.y = IN.tSpace1.z;\n  surfIN.worldNormal.z = IN.tSpace2.z;\n
          \ surfIN.internalSurfaceTtoW0 = IN.tSpace0.xyz;\n  surfIN.internalSurfaceTtoW1
          = IN.tSpace1.xyz;\n  surfIN.internalSurfaceTtoW2 = IN.tSpace2.xyz;\n  surfIN.worldViewDir
          = worldViewDir;\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o
          = (SurfaceOutputStandard)0;\n  #else\n  SurfaceOutputStandard o;\n  #endif\n
          \ o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion
          = 1.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\nfixed3 originalNormal = o.Normal;\n  fixed3
          worldN;\n  worldN.x = dot(IN.tSpace0.xyz, o.Normal);\n  worldN.y = dot(IN.tSpace1.xyz,
          o.Normal);\n  worldN.z = dot(IN.tSpace2.xyz, o.Normal);\n  o.Normal = worldN;\n
          \ half atten = 1;\n\n  // Setup lighting environment\n  UnityGI gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI,
          gi);\n  gi.indirect.diffuse = 0;\n  gi.indirect.specular = 0;\n  gi.light.color
          = 0;\n  gi.light.dir = half3(0,1,0);\n  // Call GI (lightmaps/SH/reflections)
          lighting function\n  UnityGIInput giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput,
          giInput);\n  giInput.light = gi.light;\n  giInput.worldPos = worldPos;\n
          \ giInput.worldViewDir = worldViewDir;\n  giInput.atten = atten;\n  #if
          defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n    giInput.lightmapUV
          = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n  #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n
          \   giInput.ambient = IN.sh;\n  #else\n    giInput.ambient.rgb = 0.0;\n
          \ #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n  giInput.probeHDR[1]
          = unity_SpecCube1_HDR;\n  #if UNITY_SPECCUBE_BLENDING || UNITY_SPECCUBE_BOX_PROJECTION\n
          \   giInput.boxMin[0] = unity_SpecCube0_BoxMin; // .w holds lerp value for
          blending\n  #endif\n  #if UNITY_SPECCUBE_BOX_PROJECTION\n    giInput.boxMax[0]
          = unity_SpecCube0_BoxMax;\n    giInput.probePosition[0] = unity_SpecCube0_ProbePosition;\n
          \   giInput.boxMax[1] = unity_SpecCube1_BoxMax;\n    giInput.boxMin[1] =
          unity_SpecCube1_BoxMin;\n    giInput.probePosition[1] = unity_SpecCube1_ProbePosition;\n
          \ #endif\n  LightingStandard_GI(o, giInput, gi);\n\n  // call lighting function
          to output g-buffer\n  outEmission = LightingStandard_Deferred (o, worldViewDir,
          gi, outGBuffer0, outGBuffer1, outGBuffer2);\n  #ifndef UNITY_HDR_ON\n  outEmission.rgb
          = exp2(-outEmission.rgb);\n  #endif\n}\n\n"
        m_AssetPath: Assets
        m_PlatformMask: 4294966271
        m_HardwareTierVariantsMask: 0
        m_StartLine: 225
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: abb9b0c0050746c63787264dbe0176e5
        m_FromOther: 0
        m_Language: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_SEPARATE DYNAMICLIGHTMAP_ON
          LIGHTMAP_ON UNITY_HDR_ON
      197369:
        serializedVersion: 2
        m_Code: "#line 96 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_prepassfinal\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: no\n//
          1 texcoords actually used\n//   float2 _MainTex\n#define UNITY_PASS_PREPASSFINAL\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment
          interpolation data\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n  float2
          pack0 : TEXCOORD0; // _MainTex\n  float3 worldPos : TEXCOORD1;\n  float4
          screen : TEXCOORD2;\n  float4 lmap : TEXCOORD3;\n#ifndef LIGHTMAP_ON\n  float3
          vlight : TEXCOORD4;\n#else\n#ifdef DIRLIGHTMAP_OFF\n  float4 lmapFadePos
          : TEXCOORD4;\n#endif\n#endif\n  UNITY_FOG_COORDS(5)\n  #if defined(LIGHTMAP_ON)
          && defined(DIRLIGHTMAP_COMBINED)\n  fixed3 tSpace0 : TEXCOORD6;\n  fixed3
          tSpace1 : TEXCOORD7;\n  fixed3 tSpace2 : TEXCOORD8;\n  #endif\n  UNITY_VERTEX_INPUT_INSTANCE_ID\n
          \ UNITY_VERTEX_OUTPUT_STEREO\n};\nfloat4 _MainTex_ST;\n\n// vertex shader\nv2f_surf
          vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf
          o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ o.pack0.xy = TRANSFORM_TEX(v.texcoord, _MainTex);\n  float3 worldPos =
          mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ #if defined(LIGHTMAP_ON) && defined(DIRLIGHTMAP_COMBINED)\n  fixed3 worldTangent
          = UnityObjectToWorldDir(v.tangent.xyz);\n  fixed tangentSign = v.tangent.w
          * unity_WorldTransformParams.w;\n  fixed3 worldBinormal = cross(worldNormal,
          worldTangent) * tangentSign;\n  #endif\n  #if defined(LIGHTMAP_ON) && defined(DIRLIGHTMAP_COMBINED)\n
          \ o.tSpace0 = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n
          \ o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n
          \ o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n
          \ #endif\n  o.worldPos = worldPos;\n  o.screen = ComputeScreenPos (o.pos);\n#ifdef
          DYNAMICLIGHTMAP_ON\n  o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy
          + unity_DynamicLightmapST.zw;\n#else\n  o.lmap.zw = 0;\n#endif\n#ifdef LIGHTMAP_ON\n
          \ o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n
          \ #ifdef DIRLIGHTMAP_OFF\n    o.lmapFadePos.xyz = (mul(unity_ObjectToWorld,
          v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w;\n
          \   o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w);\n
          \ #endif\n#else\n  o.lmap.xy = 0;\n  float3 worldN = UnityObjectToWorldNormal(v.normal);\n
          \ o.vlight = ShadeSH9 (float4(worldN,1.0));\n#endif\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\nsampler2D _LightBuffer;\nsampler2D
          _CameraNormalsTexture;\n#ifdef LIGHTMAP_ON\nfloat4 unity_LightmapFade;\n#endif\nfixed4
          unity_Ambient;\n\n// fragment shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target
          {\n  UNITY_SETUP_INSTANCE_ID(IN);\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.uv_MainTex.x
          = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3 worldPos = IN.worldPos;\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n
          \ // call surface function\n  surf (surfIN, o);\n  half4 light = tex2Dproj
          (_LightBuffer, UNITY_PROJ_COORD(IN.screen));\n#if defined (SHADER_API_MOBILE)\n
          \ light = max(light, half4(0.001, 0.001, 0.001, 0.001));\n#endif\n#ifndef
          UNITY_HDR_ON\n  light = -log2(light);\n#endif\n  #ifdef LIGHTMAP_ON\n    #ifdef
          DIRLIGHTMAP_OFF\n      // single lightmap\n      fixed4 lmtex = UNITY_SAMPLE_TEX2D(unity_Lightmap,
          IN.lmap.xy);\n      fixed3 lm = DecodeLightmap (lmtex);\n      light.rgb
          += lm;\n    #elif DIRLIGHTMAP_COMBINED\n      half4 nspec = tex2Dproj (_CameraNormalsTexture,
          UNITY_PROJ_COORD(IN.screen));\n      half3 normal = nspec.rgb * 2 - 1;\n
          \     o.Normal = normalize(normal);\n      // directional lightmaps\n      fixed4
          lmtex = UNITY_SAMPLE_TEX2D(unity_Lightmap, IN.lmap.xy);\n      half4 lm
          = half4(DecodeLightmap(lmtex), 0);\n      light += lm;\n    #elif DIRLIGHTMAP_SEPARATE\n
          \     // directional with specular - no support\n    #endif // DIRLIGHTMAP_OFF\n
          \ #else\n    light.rgb += IN.vlight;\n  #endif // LIGHTMAP_ON\n\n  #ifdef
          DYNAMICLIGHTMAP_ON\n  fixed4 dynlmtex = UNITY_SAMPLE_TEX2D(unity_DynamicLightmap,
          IN.lmap.zw);\n  light.rgb += DecodeRealtimeLightmap (dynlmtex);\n  #endif\n\n
          \ half4 c = LightingLambert_PrePass (o, light);\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 98
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: c08b02add17845b514589f4314ee739d
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_SEPARATE DYNAMICLIGHTMAP_ON
          LIGHTMAP_ON UNITY_HDR_ON
      201962:
        serializedVersion: 2
        m_Code: "#line 303 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma skip_variants FOG_LINEAR
          FOG_EXP FOG_EXP2\n#pragma skip_variants INSTANCING_ON\n#pragma shader_feature
          EDITOR_VISUALIZATION\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n//
          Surface shader code generated based on:\n// vertex modifier: 'vert'\n//
          writes to per-pixel normal: YES\n// writes to emission: YES\n// writes to
          occlusion: YES\n// needs world space reflection vector: no\n// needs world
          space normal vector: YES\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: YES\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: YES\n// needs world space view
          direction for lightmaps: no\n// needs vertex color: no\n// needs VFACE:
          no\n// passes tangent-to-world matrix to pixel shader: YES\n// reads from
          normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_META\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n\n#define
          INTERNAL_DATA half3 internalSurfaceTtoW0; half3 internalSurfaceTtoW1; half3
          internalSurfaceTtoW2;\n#define WorldReflectionVector(data,normal) reflect
          (data.worldRefl, half3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal)))\n#define WorldNormalVector(data,normal)
          fixed3(dot(data.internalSurfaceTtoW0,normal), dot(data.internalSurfaceTtoW1,normal),
          dot(data.internalSurfaceTtoW2,normal))\n\n// Original surface shader snippet:\n#line
          29 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\r\n\t\t//#pragma target 3.0\r\n\t\t//#pragma
          surface surf Standard vertex:vert\r\n\t\t//#pragma glsl\r\n\t\t//#pragma
          debug\r\n\r\n\t\tinline half4 unity_subtract_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_multiply_half (half4 arg1,
          half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 * arg2;\r\n\t\t}\r\n\t\tinline
          half unity_subtract_half (half arg1, half arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 - arg2;\r\n\t\t}\r\n\t\tinline half4 unity_add_half (half4 arg1, half4
          arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2;\r\n\t\t}\r\n\r\n\t\tsampler2D
          Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform;\r\n\t\tsampler2D Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform;\r\n\t\tsampler2D
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform;\r\n\t\tsampler2D Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform;\r\n\r\n\r\n\t\tstruct
          Input \r\n\t\t{\r\n\t\t\tfloat4 color : COLOR;\r\n\t\t\thalf4 meshUV0;\r\n\t\t\tfloat3
          worldViewDir;\r\n\t\t\tfloat3 worldNormal;\r\n\t\t\tINTERNAL_DATA\r\n\r\n\t\t};\r\n\r\n\t\tvoid
          vert (inout appdata_full v, out Input o)\r\n\t\t{\r\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\r\n\t\t\to.meshUV0
          = v.texcoord;\r\n\r\n\t\t}\r\n\t  \r\n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \r\n\t\t{\r\n\t\t\thalf4 uv0 = IN.meshUV0;\r\n\t\t\tfloat3 worldSpaceViewDirection
          = IN.worldViewDir;\r\n\t\t\tfloat3 worldSpaceNormal = normalize(IN.worldNormal);\r\n\t\t\thalf4
          Texture_631f4909_24f0_4658_baba_c8c4572e0335 = tex2D (Texture_631f4909_24f0_4658_baba_c8c4572e0335_Uniform,
          uv0.xy);\r\n\t\t\thalf4 Texture_66307d31_2630_4f44_96d4_23139633f2d7 = half4(UnpackNormal(tex2D
          (Texture_66307d31_2630_4f44_96d4_23139633f2d7_Uniform, uv0.xy)), 0);\r\n\t\t\thalf
          V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform = 0.76;\r\n\t\t\t//
          Subgraph for node SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f\r\n\t\t\tfloat4
          SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1 = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1 = _SinTime;\r\n\t\t\t\tfloat4
          SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2 = V1Node_f151e48d_ed62_4dac_a23c_af3d2da11fc4_Uniform;\r\n\t\t\t\thalf
          V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform = 1;\r\n\t\t\t\thalf4
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25 = tex2D (Texture_0d5979cf_43f6_4006_823e_ee52074f8b25_Uniform,
          uv0.xy);\r\n\t\t\t\thalf4 SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output
          = unity_subtract_half (V1Node_376ca068_34bd_413c_9d72_35cbbee15e79_Uniform,
          Texture_0d5979cf_43f6_4006_823e_ee52074f8b25);\r\n\t\t\t\thalf V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform
          = 2.85;\r\n\t\t\t\thalf4 PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output
          = pow (SubtractNode_3d53f521_87aa_4d50_9276_8081340f4b7d_Output, V1Node_9d0b8029_de3f_4d49_8e94_2543eb26e4f1_Uniform);\r\n\t\t\t\thalf4
          MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output = unity_multiply_half
          (PowerNode_7845b8d3_2f2e_4743_b9ee_62b372585037_Output, SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input1);\r\n\t\t\t\thalf4
          AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output = abs (SubGraphInputs_be9ff4e1_caa8_4e27_afa3_cb97b096423e_Input2);\r\n\t\t\t\thalf4
          MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output = unity_multiply_half
          (MultiplyNode_992b43b5_7e46_4087_9dfa_2497303f2719_Output, AbsoluteNode_afe32aee_e0a2_4ade_b355_e4d57b3ce835_Output);\r\n\t\t\t\tSubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1
          = MultiplyNode_f21b82ea_7ed5_428c_923b_5173eff2ba9a_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform
          = 8;\r\n\t\t\thalf4 ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform
          = half4 (0.05449827, 0.09659335, 0.9264706, 0);\r\n\t\t\t// Subgraph for
          node SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13\r\n\t\t\tfloat4 SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = 0;\r\n\t\t\t{\r\n\t\t\t\tfloat4 SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1
          = V1Node_3cff1441_893f_42dc_aaa9_4ce425d308b1_Uniform;\r\n\t\t\t\tfloat4
          SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2 = ColorNode_56f88f67_3dc3_4baa_a316_d7df81e495f0_Uniform;\r\n\t\t\t\thalf
          V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform = 1.03;\r\n\t\t\t\thalf
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output = dot (worldSpaceViewDirection,
          worldSpaceNormal);\r\n\t\t\t\thalf SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output
          = unity_subtract_half (V1Node_994fb20b_d1c3_4959_b17f_f5cf7b2b784f_Uniform,
          DotNode_0c18bff0_75d7_49b2_9f0a_3b260a7f8080_Output);\r\n\t\t\t\thalf4 PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output
          = pow (SubtractNode_b136494b_9339_420f_b1e3_6d0414421802_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input1);\r\n\t\t\t\thalf4
          MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output = unity_multiply_half
          (PowerNode_76df9552_ca24_4463_a5d3_776abb380d61_Output, SubGraphInputs_9c67defe_e02d_4c3f_aeff_501458f2a51e_Input2);\r\n\t\t\t\tSubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1
          = MultiplyNode_b1020cb6_bd15_4c6c_9656_298973c15223_Output;\r\n\t\t\t}\r\n\t\t\t//
          Subgraph ends\r\n\t\t\thalf4 AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output
          = unity_add_half (SubGraph_a06f837c_0a84_41d7_862d_0c849e64595f_Output1,
          SubGraph_57380e21_ab16_4f46_b629_e589a46b8d13_Output1);\r\n\t\t\thalf4 Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25
          = tex2D (Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25_Uniform, uv0.xy);\r\n\t\t\to.Albedo
          = Texture_631f4909_24f0_4658_baba_c8c4572e0335;\r\n\t\t\to.Normal = Texture_66307d31_2630_4f44_96d4_23139633f2d7;\r\n\t\t\to.Emission
          = AddNode_5c951bbe_e2db_4d79_b6de_3d5cb7199c84_Output;\r\n\t\t\to.Occlusion
          = Texture_6d741a9b_d9b1_444c_a1f5_2951615bfc25.a;\r\n\r\n\t\t}\r\n\t\t\n#include
          \"UnityMetaPass.cginc\"\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float4 tSpace0 : TEXCOORD0;\n
          \ float4 tSpace1 : TEXCOORD1;\n  float4 tSpace2 : TEXCOORD2;\n  half4 custompack0
          : TEXCOORD3; // meshUV0\n};\n\n// vertex shader\nv2f_surf vert_surf (appdata_full
          v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  Input customInputData;\n
          \ vert (v, customInputData);\n  o.custompack0.xyzw = customInputData.meshUV0;\n
          \ o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy,
          unity_LightmapST, unity_DynamicLightmapST);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n  fixed tangentSign
          = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3 worldBinormal =
          cross(worldNormal, worldTangent) * tangentSign;\n  o.tSpace0 = float4(worldTangent.x,
          worldBinormal.x, worldNormal.x, worldPos.x);\n  o.tSpace1 = float4(worldTangent.y,
          worldBinormal.y, worldNormal.y, worldPos.y);\n  o.tSpace2 = float4(worldTangent.z,
          worldBinormal.z, worldNormal.z, worldPos.z);\n  return o;\n}\n\n// fragment
          shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target {\n  // prepare and unpack
          data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.color.x
          = 1.0;\n  surfIN.meshUV0.x = 1.0;\n  surfIN.worldViewDir.x = 1.0;\n  surfIN.worldNormal.x
          = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3 worldPos = float3(IN.tSpace0.w,
          IN.tSpace1.w, IN.tSpace2.w);\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3
          lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3
          lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3 worldViewDir =
          normalize(UnityWorldSpaceViewDir(worldPos));\n  surfIN.worldNormal.x = IN.tSpace0.z;\n
          \ surfIN.worldNormal.y = IN.tSpace1.z;\n  surfIN.worldNormal.z = IN.tSpace2.z;\n
          \ surfIN.internalSurfaceTtoW0 = IN.tSpace0.xyz;\n  surfIN.internalSurfaceTtoW1
          = IN.tSpace1.xyz;\n  surfIN.internalSurfaceTtoW2 = IN.tSpace2.xyz;\n  surfIN.worldViewDir
          = worldViewDir;\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o
          = (SurfaceOutputStandard)0;\n  #else\n  SurfaceOutputStandard o;\n  #endif\n
          \ o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion
          = 1.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\n  UnityMetaInput metaIN;\n  UNITY_INITIALIZE_OUTPUT(UnityMetaInput,
          metaIN);\n  metaIN.Albedo = o.Albedo;\n  metaIN.Emission = o.Emission;\n
          \ return UnityMetaFragment(metaIN);\n}\n\n"
        m_AssetPath: Assets
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 305
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 6c096610b3fc415baeb85e201ff5db10
        m_FromOther: 0
        m_Language: 0
        m_VariantsUser0:
        - - _
          - EDITOR_VISUALIZATION
        m_VariantsUser1:
        - - _
          - EDITOR_VISUALIZATION
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
      262140:
        serializedVersion: 2
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// uniforms\nfloat4 unity_Lightmap_ST;\nfloat4
          _MainTex_ST;\n\n// vertex shader input data\nstruct appdata {\n  float3
          pos : POSITION;\n  float3 uv1 : TEXCOORD1;\n  float3 uv0 : TEXCOORD0;\n
          \ UNITY_VERTEX_INPUT_INSTANCE_ID\n};\n\n// vertex-to-fragment interpolators\nstruct
          v2f {\n  fixed4 color : COLOR0;\n  float2 uv0 : TEXCOORD0;\n  float2 uv1
          : TEXCOORD1;\n  float2 uv2 : TEXCOORD2;\n  #if USING_FOG\n    fixed fog
          : TEXCOORD3;\n  #endif\n  float4 pos : SV_POSITION;\n  UNITY_VERTEX_OUTPUT_STEREO\n};\n\n//
          vertex shader\nv2f vert (appdata IN) {\n  v2f o;\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n  half4 color = half4(0,0,0,1.1);\n
          \ float3 eyePos = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3
          viewDir = 0.0;\n  o.color = saturate(color);\n  // compute texture coordinates\n
          \ o.uv0 = IN.uv1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  o.uv1
          = IN.uv1.xy * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n  o.uv2 = IN.uv0.xy
          * _MainTex_ST.xy + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n    float
          fogCoord = length(eyePos.xyz); // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n
          \   o.fog = saturate(unityFogFactor);\n  #endif\n  // transform position\n
          \ o.pos = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\nfixed4 _Color;\n\n// fragment shader\nfixed4 frag (v2f IN) :
          SV_Target {\n  fixed4 col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture
          #0\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap, IN.uv0.xy);\n  col = tex
          * tex.a;\n  col *= 2;\n  // SetTexture #1\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap,
          IN.uv1.xy);\n  col = col * _Color;\n  // SetTexture #2\n  tex = tex2D (_MainTex,
          IN.uv2.xy);\n  col.rgb = tex * col;\n  col *= 4;\n  col.a = fixed4(1,1,1,1).a;\n
          \ // fog\n  #if USING_FOG\n    col.rgb = lerp (unity_FogColor.rgb, col.rgb,
          IN.fog);\n  #endif\n  return col;\n}\n\n// texenvs\n//! TexEnv0: 02010105
          02010105 [unity_Lightmap] usesLightmapST\n//! TexEnv1: 01000102 01000102
          [unity_Lightmap] [_Color]\n//! TexEnv2: 04010100 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 1
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: 
      287081:
        serializedVersion: 2
        m_Code: "#line 175 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          exclude_renderers nomrt\n#pragma multi_compile_prepassfinal\n#pragma skip_variants
          FOG_LINEAR FOG_EXP FOG_EXP2\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n//
          Surface shader code generated based on:\n// writes to per-pixel normal:
          no\n// writes to emission: no\n// writes to occlusion: no\n// needs world
          space reflection vector: no\n// needs world space normal vector: no\n//
          needs screen space position: no\n// needs world space position: no\n// needs
          view direction: no\n// needs world space view direction: no\n// needs world
          space position for lighting: YES\n// needs world space view direction for
          lighting: no\n// needs world space view direction for lightmaps: no\n//
          needs vertex color: no\n// needs VFACE: no\n// passes tangent-to-world matrix
          to pixel shader: no\n// reads from normal: YES\n// 1 texcoords actually
          used\n//   float2 _MainTex\n#define UNITY_PASS_DEFERRED\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment
          interpolation data\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n  float2
          pack0 : TEXCOORD0; // _MainTex\n  half3 worldNormal : TEXCOORD1;\n  float3
          worldPos : TEXCOORD2;\n  float4 lmap : TEXCOORD3;\n#ifndef LIGHTMAP_ON\n
          \ #if UNITY_SHOULD_SAMPLE_SH\n    half3 sh : TEXCOORD4; // SH\n  #endif\n#else\n
          \ #ifdef DIRLIGHTMAP_OFF\n    float4 lmapFadePos : TEXCOORD4;\n  #endif\n#endif\n
          \ UNITY_VERTEX_INPUT_INSTANCE_ID\n  UNITY_VERTEX_OUTPUT_STEREO\n};\nfloat4
          _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf (appdata_full v) {\n
          \ UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ UNITY_TRANSFER_INSTANCE_ID(v,o);\n  UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  o.worldPos
          = worldPos;\n  o.worldNormal = worldNormal;\n#ifdef DYNAMICLIGHTMAP_ON\n
          \ o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;\n#else\n
          \ o.lmap.zw = 0;\n#endif\n#ifdef LIGHTMAP_ON\n  o.lmap.xy = v.texcoord1.xy
          * unity_LightmapST.xy + unity_LightmapST.zw;\n  #ifdef DIRLIGHTMAP_OFF\n
          \   o.lmapFadePos.xyz = (mul(unity_ObjectToWorld, v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz)
          * unity_ShadowFadeCenterAndType.w;\n    o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z)
          * (1.0 - unity_ShadowFadeCenterAndType.w);\n  #endif\n#else\n  o.lmap.xy
          = 0;\n    #if UNITY_SHOULD_SAMPLE_SH\n      o.sh = 0;\n      o.sh = ShadeSHPerVertex
          (worldNormal, o.sh);\n    #endif\n#endif\n  return o;\n}\n#ifdef LIGHTMAP_ON\nfloat4
          unity_LightmapFade;\n#endif\nfixed4 unity_Ambient;\n\n// fragment shader\nvoid
          frag_surf (v2f_surf IN,\n    out half4 outGBuffer0 : SV_Target0,\n    out
          half4 outGBuffer1 : SV_Target1,\n    out half4 outGBuffer2 : SV_Target2,\n
          \   out half4 outEmission : SV_Target3) {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n
          \ normalWorldVertex = IN.worldNormal;\n\n  // call surface function\n  surf
          (surfIN, o);\nfixed3 originalNormal = o.Normal;\n  half atten = 1;\n\n  //
          Setup lighting environment\n  UnityGI gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI,
          gi);\n  gi.indirect.diffuse = 0;\n  gi.indirect.specular = 0;\n  gi.light.color
          = 0;\n  gi.light.dir = half3(0,1,0);\n  // Call GI (lightmaps/SH/reflections)
          lighting function\n  UnityGIInput giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput,
          giInput);\n  giInput.light = gi.light;\n  giInput.worldPos = worldPos;\n
          \ giInput.atten = atten;\n  #if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n
          \   giInput.lightmapUV = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n
          \ #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n    giInput.ambient = IN.sh;\n  #else\n
          \   giInput.ambient.rgb = 0.0;\n  #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n
          \ giInput.probeHDR[1] = unity_SpecCube1_HDR;\n  #if UNITY_SPECCUBE_BLENDING
          || UNITY_SPECCUBE_BOX_PROJECTION\n    giInput.boxMin[0] = unity_SpecCube0_BoxMin;
          // .w holds lerp value for blending\n  #endif\n  #if UNITY_SPECCUBE_BOX_PROJECTION\n
          \   giInput.boxMax[0] = unity_SpecCube0_BoxMax;\n    giInput.probePosition[0]
          = unity_SpecCube0_ProbePosition;\n    giInput.boxMax[1] = unity_SpecCube1_BoxMax;\n
          \   giInput.boxMin[1] = unity_SpecCube1_BoxMin;\n    giInput.probePosition[1]
          = unity_SpecCube1_ProbePosition;\n  #endif\n  LightingLambert_GI(o, giInput,
          gi);\n\n  // call lighting function to output g-buffer\n  outEmission =
          LightingLambert_Deferred (o, gi, outGBuffer0, outGBuffer1, outGBuffer2);\n
          \ #ifndef UNITY_HDR_ON\n  outEmission.rgb = exp2(-outEmission.rgb);\n  #endif\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294966271
        m_HardwareTierVariantsMask: 0
        m_StartLine: 177
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: c08b02add17845b514589f4314ee739d
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - []
        - - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
        - - UNITY_HDR_ON
        - - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_SEPARATE DYNAMICLIGHTMAP_ON
          LIGHTMAP_ON UNITY_HDR_ON
      334788:
        serializedVersion: 2
        m_Code: "#line 175 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#pragma skip_variants INSTANCING_ON\n#pragma
          shader_feature EDITOR_VISUALIZATION\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: no\n//
          1 texcoords actually used\n//   float2 _MainTex\n#define UNITY_PASS_META\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n/*
          UNITY: Original start of shader */\n//#pragma surface surf Lambert\n\nsampler2D
          _MainTex;\nfixed4 _Color;\n\nstruct Input {\n\tfloat2 uv_MainTex;\n};\n\nvoid
          surf (Input IN, inout SurfaceOutput o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex)
          * _Color;\n\to.Albedo = c.rgb;\n\to.Alpha = c.a;\n}\n\n#include \"UnityMetaPass.cginc\"\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  float2 pack0 : TEXCOORD0; // _MainTex\n  float3 worldPos
          : TEXCOORD1;\n};\nfloat4 _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf
          (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy,
          unity_LightmapST, unity_DynamicLightmapST);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  o.worldPos
          = worldPos;\n  return o;\n}\n\n// fragment shader\nfixed4 frag_surf (v2f_surf
          IN) : SV_Target {\n  // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\n  UnityMetaInput metaIN;\n  UNITY_INITIALIZE_OUTPUT(UnityMetaInput,
          metaIN);\n  metaIN.Albedo = o.Albedo;\n  metaIN.Emission = o.Emission;\n
          \ metaIN.SpecularColor = o.Specular;\n  return UnityMetaFragment(metaIN);\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_StartLine: 177
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: cc11b7d4cb68004027a8aba489c730c3
        m_FromOther: 1
        m_Language: 0
        m_VariantsUser0:
        - - _
          - EDITOR_VISUALIZATION
        m_VariantsUser1:
        - - _
          - EDITOR_VISUALIZATION
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5:
        - PROCEDURAL_INSTANCING_ON
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
    m_MeshComponentsFromSnippets: 139
    m_HasSurfaceShaders: 1
    m_HasFixedFunctionShaders: 0
